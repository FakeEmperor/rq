# -*- coding: utf-8 -*-
#
# Copyright 2020 NVIDIA Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
from typing import Any, Optional

def release_local(local: Any) -> None: ...

class Local:
    __slots__: Any = ...
    def __init__(self) -> None: ...
    def __iter__(self) -> Any: ...
    def __call__(self, proxy: Any): ...
    def __release_local__(self) -> None: ...
    def __getattr__(self, name: Any): ...
    def __setattr__(self, name: Any, value: Any) -> None: ...
    def __delattr__(self, name: Any) -> None: ...

class LocalStack:
    _local: Any = ...
    def __init__(self) -> None: ...
    def __release_local__(self) -> None: ...
    def _get__ident_func__(self): ...
    def _set__ident_func__(self, value: Any) -> None: ...
    __ident_func__: Any = ...
    def __call__(self): ...
    def push(self, obj: Any): ...
    def pop(self): ...
    @property
    def top(self): ...
    def __len__(self): ...

class LocalManager:
    locals: Any = ...
    ident_func: Any = ...
    def __init__(self, locals: Optional[Any] = ..., ident_func: Optional[Any] = ...) -> None: ...
    def get_ident(self): ...
    def cleanup(self) -> None: ...
    def __repr__(self): ...

class LocalProxy:
    __slots__: Any = ...
    def __init__(self, local: Any, name: Optional[Any] = ...) -> None: ...
    def _get_current_object(self): ...
    @property
    def __dict__(self): ...
    def __repr__(self): ...
    def __nonzero__(self): ...
    def __unicode__(self): ...
    def __dir__(self): ...
    def __getattr__(self, name: Any): ...
    def __setitem__(self, key: Any, value: Any) -> None: ...
    def __delitem__(self, key: Any) -> None: ...
    def __setslice__(self, i: Any, j: Any, seq: Any) -> None: ...
    def __delslice__(self, i: Any, j: Any) -> None: ...
    __setattr__: Any = ...
    __delattr__: Any = ...
    __str__: Any = ...
    __lt__: Any = ...
    __le__: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    __gt__: Any = ...
    __ge__: Any = ...
    __cmp__: Any = ...
    __hash__: Any = ...
    __call__: Any = ...
    __len__: Any = ...
    __getitem__: Any = ...
    __iter__: Any = ...
    __contains__: Any = ...
    __getslice__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    __floordiv__: Any = ...
    __mod__: Any = ...
    __divmod__: Any = ...
    __pow__: Any = ...
    __lshift__: Any = ...
    __rshift__: Any = ...
    __and__: Any = ...
    __xor__: Any = ...
    __or__: Any = ...
    __div__: Any = ...
    __truediv__: Any = ...
    __neg__: Any = ...
    __pos__: Any = ...
    __abs__: Any = ...
    __invert__: Any = ...
    __complex__: Any = ...
    __int__: Any = ...
    __long__: Any = ...
    __float__: Any = ...
    __oct__: Any = ...
    __hex__: Any = ...
    __index__: Any = ...
    __coerce__: Any = ...
    __enter__: Any = ...
    __exit__: Any = ...
